<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My Personal Blog</title>
    <description>This blog is an attempt to dive into personal blogging related to software development.
</description>
    <link>https://mogikanen9.github.io/</link>
    <atom:link href="https://mogikanen9.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 22 May 2018 09:43:36 -0400</pubDate>
    <lastBuildDate>Tue, 22 May 2018 09:43:36 -0400</lastBuildDate>
    <generator>Jekyll v3.8.1</generator>
    
      <item>
        <title>SharePoint Framework (SPFx). Custom Karma configuration for different test result and coverage reports.</title>
        <description>&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;This post will describe how to customize &lt;a href=&quot;http://karma-runner.github.io/2.0/index.html&quot;&gt;Karma&lt;/a&gt; configuration for &lt;a href=&quot;https://docs.microsoft.com/en-us/sharepoint/dev/spfx/sharepoint-framework-overview&quot;&gt;SharePoint Framework (SPFx)&lt;/a&gt; web part projects with &lt;a href=&quot;https://github.com/OfficeDev/office-ui-fabric-react&quot;&gt;Office UI Fabric React&lt;/a&gt;  created/generated with &lt;a href=&quot;https://docs.microsoft.com/en-us/sharepoint/dev/spfx/toolchain/scaffolding-projects-using-yeoman-sharepoint-generator&quot;&gt;Yoman SharePoint Generator&lt;/a&gt; including:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Generate test result report in &lt;a href=&quot;https://junit.org/&quot;&gt;JUnit&lt;/a&gt; format (ex.: for &lt;a href=&quot;https://docs.microsoft.com/en-us/vsts/build-release/tasks/test/publish-test-results?view=vsts&quot;&gt;VSTS CI dashboard&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Generate test coverage report in text (console) format&lt;/li&gt;
  &lt;li&gt;Generate test coverage report in &lt;a href=&quot;http://cobertura.github.io/cobertura/&quot;&gt;Cobertura&lt;/a&gt; format (ex.: for &lt;a href=&quot;https://docs.microsoft.com/en-us/vsts/build-release/tasks/test/publish-code-coverage-results?view=vsts&quot;&gt;VSTS CI dashboard&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;steps&quot;&gt;Steps&lt;/h3&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;1-create-spfx-react-web-part-project-skip-if-you-already-have-one&quot;&gt;1. Create SPFx React web part project (skip if you already have one)&lt;/h4&gt;
&lt;p&gt;Create your SharePoint Framework React web part project using the instructions/steps from &lt;a href=&quot;https://docs.microsoft.com/en-us/sharepoint/dev/spfx/toolchain/scaffolding-projects-using-yeoman-sharepoint-generator&quot;&gt;“Scaffold projects by using Yeoman SharePoint generator”&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;2-createrun-your-unit-tests&quot;&gt;2. Create/run your unit test(s)&lt;/h4&gt;
&lt;p&gt;Create your unit tests and run them by executing&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;npm &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You should get list of successfully executed uni tests, ex:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Start:
  HelloWorld init &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
    √ simple &lt;span class=&quot;nb&quot;&gt;test

&lt;/span&gt;Finished &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.016 secs / 0.001 secs

SUMMARY:
√ 1 tests completed
21 05 2018 20:54:07.569:DEBUG &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;karma]: Run &lt;span class=&quot;nb&quot;&gt;complete&lt;/span&gt;, exiting.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;3-custom-karma-config-setup&quot;&gt;3. Custom Karma config setup&lt;/h4&gt;
&lt;p&gt;The default configuration of Karma test runner comes with &lt;code class=&quot;highlighter-rouge&quot;&gt;sp-build-web&lt;/code&gt; package and is available 
inside &lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; folder:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@microsoft/sp-build-web/lib/karma/karma.config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In order to customize the default/predefined configuration a custom config needs to be created.&lt;/p&gt;

&lt;p&gt;Create custom Karma config file &lt;code class=&quot;highlighter-rouge&quot;&gt;karma.config.js&lt;/code&gt; inside folder &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;your_project_folder&amp;gt;/config&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&quot;use strict&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;existingKarmaConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'@microsoft/sp-build-web/lib/karma/karma.config'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;existingKarmaConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We inherit our custom configuration from the default one. In order to enable new custom Karma config file we need to update &lt;code class=&quot;highlighter-rouge&quot;&gt;gulp.js&lt;/code&gt; config. Add the following lines to &lt;code class=&quot;highlighter-rouge&quot;&gt;gulp.js&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Extending Karma
&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;karmaTask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;karma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;karmaTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;karmaTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;taskConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;configPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./config/karma.config.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;4--setup-junit-reporter&quot;&gt;4.  Setup JUnit reporter&lt;/h4&gt;
&lt;p&gt;Install &lt;code class=&quot;highlighter-rouge&quot;&gt;karma-junit-reporter&lt;/code&gt; package as Dev dependency:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;npm i karma-junit-reporter &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The following steps needs to be done to enable JUnit reporter in Karma:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;add JUnit reporter to the list of configured reporters (default are &lt;code class=&quot;highlighter-rouge&quot;&gt;test-result&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;mocha-clean&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;coverage&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;provide JUnit reporter configuration&lt;/li&gt;
  &lt;li&gt;add karma-junit-reporter plugin to the list of configured plugins&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The below lines of karma.config.js combine all three steps:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        
        &lt;span class=&quot;na&quot;&gt;reporters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'test-result'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mocha-clean'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'coverage'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'junit'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        
        &lt;span class=&quot;na&quot;&gt;junitReporter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;outputDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'temp/testResult'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// results will be saved as $outputDir/$browserName.xml
&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

        &lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'karma-junit-reporter'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Run&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;npm &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Once executed check folder &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;your_project/&amp;gt;temp/testResult&lt;/code&gt; - it will contain file &lt;code class=&quot;highlighter-rouge&quot;&gt;TESTS-PhantomJS_*.xml&lt;/code&gt; which contains test results in JUnit format.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;5--setup-console-coverage-reporter&quot;&gt;5.  Setup console coverage reporter&lt;/h4&gt;
&lt;p&gt;In order to diaplsy test coverage report in text/console format we need to expand the list 
of preconfigured coverage reporters (&lt;code class=&quot;highlighter-rouge&quot;&gt;html&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;json&lt;/code&gt;). Add the following configuration to karma.config.js:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;coverageReporter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;                        
            &lt;span class=&quot;nl&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'temp/coverage'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;reporters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;subdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'js'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;subdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'js-coverage.json'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'text'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'text-summary'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Run&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;npm &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;and your console output will contain full coverage report, ex:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nt&quot;&gt;----------------------------&lt;/span&gt;|----------|----------|----------|----------|----------------|
File                        |  % Stmts | % Branch |  % Funcs |  % Lines |Uncovered Lines |
&lt;span class=&quot;nt&quot;&gt;----------------------------&lt;/span&gt;|----------|----------|----------|----------|----------------|
 components&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;               |       84 |    71.43 |       75 |     91.3 |                |
  HelloWorld.js             |    80.95 |    71.43 |       75 |    89.47 |           5,22 |
  HelloWorld.module.scss.js |      100 |      100 |      100 |      100 |                |
&lt;span class=&quot;nt&quot;&gt;----------------------------&lt;/span&gt;|----------|----------|----------|----------|----------------|
All files                   |       84 |    71.43 |       75 |     91.3 |                |
&lt;span class=&quot;nt&quot;&gt;----------------------------&lt;/span&gt;|----------|----------|----------|----------|----------------|

&lt;span class=&quot;o&quot;&gt;===============================&lt;/span&gt; Coverage summary &lt;span class=&quot;o&quot;&gt;===============================&lt;/span&gt;
Statements   : 84% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; 21/25 &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Branches     : 71.43% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; 10/14 &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Functions    : 75% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; 6/8 &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Lines        : 91.3% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; 21/23 &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;================================================================================&lt;/span&gt;
21 05 2018 22:22:12.787:DEBUG &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;karma]: Run &lt;span class=&quot;nb&quot;&gt;complete&lt;/span&gt;, exiting.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;6--setup-cobertura-coverage-reporter&quot;&gt;6.  Setup Cobertura coverage reporter&lt;/h4&gt;
&lt;p&gt;Since Karma has built-in Cobertura coverage reporter the setup is similar to the previous step: add cobertura reporter to the list of configured coverage reporters in karma.config.js:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;coverageReporter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;                        
            &lt;span class=&quot;nl&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'temp/coverage'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;reporters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;subdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'js'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;subdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'js-coverage.json'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'text'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'text-summary'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cobertura'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;subdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cobertura.xml'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Run&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;npm &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Once executed check folder &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;your_project/&amp;gt;temp/coverage&lt;/code&gt; - it will contain file &lt;code class=&quot;highlighter-rouge&quot;&gt;cobertura.xml&lt;/code&gt; which contains test coverage results in Cobertura format.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;7--enjoy-your-test-and-test-coverage-reports&quot;&gt;7.  Enjoy your test and test coverage reports!&lt;/h4&gt;
&lt;p&gt;Full source of karma.config.js is below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&quot;use strict&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
const existingKarmaConfig &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; require&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'@microsoft/sp-build-web/lib/karma/karma.config'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

module.exports &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;config&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    existingKarmaConfig&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;config&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    config.set&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;

        reporters: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'test-result'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'mocha-clean'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'coverage'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'junit'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;,

        coverageReporter: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;                        
            &lt;span class=&quot;nb&quot;&gt;dir&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'temp/coverage'&lt;/span&gt;,
            reporters: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'html'&lt;/span&gt;, subdir: &lt;span class=&quot;s1&quot;&gt;'js'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
                &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'json'&lt;/span&gt;, subdir: &lt;span class=&quot;s1&quot;&gt;'./'&lt;/span&gt;, file: &lt;span class=&quot;s1&quot;&gt;'js-coverage.json'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
                &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'text'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
                &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'text-summary'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
                &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'cobertura'&lt;/span&gt;, subdir: &lt;span class=&quot;s1&quot;&gt;'./'&lt;/span&gt;, file: &lt;span class=&quot;s1&quot;&gt;'cobertura.xml'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}]&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,

        junitReporter: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            outputDir: &lt;span class=&quot;s1&quot;&gt;'temp\\testResult'&lt;/span&gt; // results will be saved as &lt;span class=&quot;nv&quot;&gt;$outputDir&lt;/span&gt;/&lt;span class=&quot;nv&quot;&gt;$browserName&lt;/span&gt;.xml            
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,

        plugins: config.plugins.concat&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;
            require&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'karma-junit-reporter'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;!-- Universal Code for Disqus  --&gt;
&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
    /**
     *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
     *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables
     */
    /*
    var disqus_config = function () {
        this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
        this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
    };
    */
    (function() {  // DON'T EDIT BELOW THIS LINE
        var d = document, s = d.createElement('script');

        s.src = '//https-mogikanen9-github-io.disqus.com/embed.js';

        s.setAttribute('data-timestamp', +new Date());
        (d.head || d.body).appendChild(s);
    })();
&lt;/script&gt;

&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot; rel=&quot;nofollow&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;

</description>
        <pubDate>Mon, 21 May 2018 12:07:00 -0400</pubDate>
        <link>https://mogikanen9.github.io/spfx/react/karma/2018/05/21/spfx-karma-config.html</link>
        <guid isPermaLink="true">https://mogikanen9.github.io/spfx/react/karma/2018/05/21/spfx-karma-config.html</guid>
        
        
        <category>spfx</category>
        
        <category>react</category>
        
        <category>karma</category>
        
      </item>
    
      <item>
        <title>Spring Boot, JCache and Hazelcast!</title>
        <description>&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;This post is about using JCache API/Hazelcast implementation in Spring Boot application.&lt;/p&gt;

&lt;p&gt;This exercise is based on the sample from Hazelcast team available at
&lt;a href=&quot;https://github.com/hazelcast/hazelcast-code-samples/tree/master/hazelcast-integration/springboot-caching-jcache&quot;&gt;GitHub Hazelcast Code Samples Repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Will use &lt;a href=&quot;https://maven.apache.org/&quot;&gt;Maven&lt;/a&gt; as our build and dependency management tool.&lt;/p&gt;

&lt;h3 id=&quot;definitions&quot;&gt;Definitions&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.jcp.org/en/jsr/detail?id=107&quot;&gt;JCache (JSR 107)&lt;/a&gt; is a common API for
 using caching in Java.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hazelcast.org/&quot;&gt;Hazelcast&lt;/a&gt; is an open source In-Memory Data Grid
 product. It is also a full implementation of JCache(JSR 107).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://projects.spring.io/spring-boot/&quot;&gt;Spring Boot&lt;/a&gt; is an opionated version
 of Spring Framework which combines many other Spring projects.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;steps&quot;&gt;Steps&lt;/h3&gt;

&lt;h4 id=&quot;1-configure-your-spring-boot-project&quot;&gt;1. Configure your Spring Boot project.&lt;/h4&gt;

&lt;h4 id=&quot;2-add-caching-starter-to-your-spring-boot-project&quot;&gt;2. Add caching starter to your Spring Boot project:&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-cache&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;3--add-jcache-api-to-your-classpath&quot;&gt;3.  Add JCache API to your classpath:&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;javax.cache&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;cache-api&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;4--add-hazelcast-to-the-classpath&quot;&gt;4.  Add Hazelcast to the classpath:&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.hazelcast&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;hazelcast-all&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.7.4&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;5--specify-cache-type-and-jcache-provider-in-applicationproperties-configuration-file&quot;&gt;5.  Specify cache type and jcache provider in application.properties configuration file:&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-properties&quot; data-lang=&quot;properties&quot;&gt;&lt;span class=&quot;py&quot;&gt;spring.cache.type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;jcache
&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;spring.cache.jcache.provider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;com.hazelcast.cache.impl.HazelcastServerCachingProvider&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;6--add-hazelcastxml-to-the-classpath-and-define-your-cache-there-ex&quot;&gt;6.  Add hazelcast.xml to the classpath and define your cache there, ex.:&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;hazelcast&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.hazelcast.com/schema/config hazelcast-config-3.7.xsd&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.hazelcast.com/schema/config&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;cache&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;events&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;management-enabled&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/management-enabled&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/cache&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/hazelcast&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;7--add-enablecaching-annotation-to-your-configuration-class&quot;&gt;7.  Add &lt;code class=&quot;highlighter-rouge&quot;&gt;@EnableCaching&lt;/code&gt; annotation to your configuration class.&lt;/h4&gt;

&lt;h4 id=&quot;8--disable-auto-configuration-for-hazelcast-in-your-spring-boot-application-configuration-class&quot;&gt;8.  Disable auto configuration for Hazelcast in your Spring Boot application configuration class:&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;  
&lt;span class=&quot;nd&quot;&gt;@SpringBootApplication&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@EnableAutoConfiguration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exclude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HazelcastAutoConfiguration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@EnableCaching&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SpringBootHazelcastJCacheApplication&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;SpringApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SpringBootHazelcastJCacheApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;9--use-jcachejsr107-annotation-to-annotate-your-cache-targets-ex&quot;&gt;9.  Use JCache(JSR107) annotation to annotate your cache targets, ex:&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;EventService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nd&quot;&gt;@CacheResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cacheName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;events&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Event&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eventId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;10--enjoy-caching&quot;&gt;10.  Enjoy caching!&lt;/h4&gt;

&lt;h3 id=&quot;details-and-nuances&quot;&gt;Details and nuances&lt;/h3&gt;
&lt;p&gt;If you add Hazelcast to the classpath of Spring Boot project, then Spring Boot &lt;a href=&quot;http://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-hazelcast.html&quot;&gt;automatically configures one Hazelcast instance&lt;/a&gt; in its context. We don’t need this instance - we need only JCache manager and provider to be initialized following standard JCache approach. That’s why we need step #8 - other wise will endup havenig 2 Hazelcast instances in our application:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-log&quot; data-lang=&quot;log&quot;&gt;Members [2] {
	Member [192.168.1.137]:5701 - db7634e1-8660-42c4-881c-eff7af1d73b8
	Member [192.168.1.137]:5702 - 256d96f2-b198-4ddf-b89e-fef9c4fd9f6d this
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;!-- Universal Code for Disqus  --&gt;
&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
    /**
     *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
     *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables
     */
    /*
    var disqus_config = function () {
        this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
        this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
    };
    */
    (function() {  // DON'T EDIT BELOW THIS LINE
        var d = document, s = d.createElement('script');

        s.src = '//https-mogikanen9-github-io.disqus.com/embed.js';

        s.setAttribute('data-timestamp', +new Date());
        (d.head || d.body).appendChild(s);
    })();
&lt;/script&gt;

&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot; rel=&quot;nofollow&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;

</description>
        <pubDate>Sat, 08 Apr 2017 19:05:09 -0400</pubDate>
        <link>https://mogikanen9.github.io/java/spring/jcache/hazelcast/2017/04/08/spring-boot-hazelcast-jcache.html</link>
        <guid isPermaLink="true">https://mogikanen9.github.io/java/spring/jcache/hazelcast/2017/04/08/spring-boot-hazelcast-jcache.html</guid>
        
        
        <category>java</category>
        
        <category>spring</category>
        
        <category>jcache</category>
        
        <category>hazelcast</category>
        
      </item>
    
      <item>
        <title>Configure Shibboleth SP on macOS Sierra</title>
        <description>&lt;h2 id=&quot;software&quot;&gt;Software&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://shibboleth.net/products/service-provider.html&quot;&gt;Shibboleth SP&lt;/a&gt; - Service Provider software to which allows to configure SSO-enabled web-sites/web-applications.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://httpd.apache.org/&quot;&gt;Apache Web Server&lt;/a&gt; - web server which will be used to expose our web sites and enable SSO for them. Shibboleth SP can integrate with either Apache or IIS - it cannot work standalone.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.macports.org/&quot;&gt;MacPorts&lt;/a&gt; - tool which allows installing different kind of Open Source software on you Mac. MacPorts is a legacy tool - &lt;a href=&quot;http://brew.sh/&quot;&gt;HomeBrew&lt;/a&gt; is a much better, easy to use, modern tool. Unfortunately, ShibbolethSP package right now (Dec 2016) is assembled for Mac Ports only.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://docs.oracle.com/javadb/10.6.2.1/adminguide/cadminsslkeys.html&quot;&gt;JDK keytool&lt;/a&gt; - utility which comes with Oracle JDK and allows creating private keys, self-signed, certs, public certs, key stores, etc. It can be considered as an alternative of &lt;a href=&quot;https://www.openssl.org/&quot;&gt;OpenSSL&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;installation-steps&quot;&gt;Installation steps&lt;/h2&gt;

&lt;h3 id=&quot;1-install-shibboleth-sp&quot;&gt;1. Install Shibboleth SP&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Download and install MacPorts from &lt;a href=&quot;https://www.macports.org/install.php&quot;&gt;https://www.macports.org/install.php&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Install Shibboleth SP using instructions from &lt;a href=&quot;https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPMacPortInstallation&quot;&gt;NativeSPMacPortInstallation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;2-create-private-key-and-public-cert&quot;&gt;2. Create Private key and Public Cert&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Create self-signed certificate:
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;keytool -genkey -keyalg RSA -alias local-dev -keystore local-dev.jks -validity 365 -keysize 2048
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Export public certificate:
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;keytool -export -keystore local-dev.jks -alias local-dev -file local-dev.cer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Export private key:
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;keytool -importkeystore -srckeystore local-dev.jks -destkeystore local-dev.p12 -deststoretype PKCS12
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As a result we got  a pare of public cert and private key which we can use for SSL on Apache.&lt;/p&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;3-configure-apache&quot;&gt;3. Configure Apache&lt;/h3&gt;

&lt;p&gt;Apache2 on macOS configuration files are located at &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/apache2&lt;/code&gt;. By default only http is available and default port is 80.&lt;/p&gt;

&lt;h4 id=&quot;31-configure-virtual-host&quot;&gt;3.1 Configure Virtual Host&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Uncomment line &lt;code class=&quot;highlighter-rouge&quot;&gt;Include conf/extra/httpd-vhosts.conf&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/apache2/httpd.conf&lt;/code&gt; (Apache config file)&lt;/li&gt;
  &lt;li&gt;Create virtual host by updating httpd-vhosts.conf config file:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;VirtualHost *:80&amp;gt;
   ServerAdmin webmaster@sp.mogikanensoftware.com
   DocumentRoot &quot;/Library/WebServer/Documents/sp.mogikanensoftware.com&quot;
   ServerName sp.mogikanensoftware.com
   ServerAlias www.sp.mogikanensoftware.com
   ErrorLog &quot;/private/var/log/apache2/sp.mogikanensoftware.com-error_log&quot;
   CustomLog &quot;/private/var/log/apache2/sp.mogikanensoftware.com-access_log&quot; common
  &amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Create folder &lt;code class=&quot;highlighter-rouge&quot;&gt;sp.mogikanensoftware.com&lt;/code&gt; for virtual host at &lt;code class=&quot;highlighter-rouge&quot;&gt;/Library/WebServer/Documents/&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;Create directory &lt;code class=&quot;highlighter-rouge&quot;&gt;secure&lt;/code&gt; inside folder &lt;code class=&quot;highlighter-rouge&quot;&gt;/Library/WebServer/Documents/sp.mogikanensoftware.com&lt;/code&gt;. It will be the secured zone;&lt;/li&gt;
  &lt;li&gt;Place one index.html inside both root folder of virtual host and &lt;code class=&quot;highlighter-rouge&quot;&gt;secure&lt;/code&gt; folder.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;32-configure-ssl&quot;&gt;3.2 Configure SSL&lt;/h4&gt;
&lt;p&gt;Will use previously created private and public key for SSL.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Copy files &lt;code class=&quot;highlighter-rouge&quot;&gt;local-dev.cer&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;local-dev.p12&lt;/code&gt; to folder &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/apache2&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Rename public cert file &lt;code class=&quot;highlighter-rouge&quot;&gt;local-dev.cer&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;server.crt&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;Rename private key file &lt;code class=&quot;highlighter-rouge&quot;&gt;local-dev.p12&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;server.key&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;Add/or uncomment 2 Apache plugins/mods in &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/apache2/httpd.conf&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;LoadModule socache_shmcb_module libexec/apache2/mod_socache_shmcb.so
LoadModule ssl_module libexec/apache2/mod_ssl.so
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Uncomment line &lt;code class=&quot;highlighter-rouge&quot;&gt;Include /private/etc/apache2/extra/httpd-ssl.conf&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/apache2/httpd.conf&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Update &lt;code class=&quot;highlighter-rouge&quot;&gt;httpd-ssl.conf&lt;/code&gt; config to configure SSL for the virtual host:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DocumentRoot &quot;/Library/WebServer/Documents/sp.mogikanensoftware.com&quot;
ServerName sp.mogikanensoftware.com:443
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Please, verify and confirm that the following lines are uncommented and point to the correct files (our key and cert):&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SSLCertificateFile &quot;/private/etc/apache2/server.crt&quot;
SLCertificateKeyFile &quot;/private/etc/apache2/server.key&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;33-configure-shibboleth-pluginmod&quot;&gt;3.3 Configure Shibboleth plugin/mod&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Create folder &lt;code class=&quot;highlighter-rouge&quot;&gt;shibboleth-conf&lt;/code&gt; inside &lt;code class=&quot;highlighter-rouge&quot;&gt;/private/etc/apache2/extra/&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;Locate Shibboleth SP installed folder: &lt;code class=&quot;highlighter-rouge&quot;&gt;/opt/local/etc/shibboleth&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;Copy &lt;code class=&quot;highlighter-rouge&quot;&gt;apache24.config&lt;/code&gt; file from Shibboleth SP folder to folder &lt;code class=&quot;highlighter-rouge&quot;&gt;/private/etc/apache2/extra/shibboleth-conf&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;Enable Shibboleth SP and Apache integration:&lt;/li&gt;
  &lt;li&gt;Modify file &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/apache2/httpd.conf&lt;/code&gt; - add line:
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  Include /private/etc/apache2/extra/shibboleth-conf/apache24.config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Enable Shibboleth SP plugin/mod by adding the following line to &lt;code class=&quot;highlighter-rouge&quot;&gt;apache24.config&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  LoadModule mod_shib /opt/local/lib/shibboleth/mod_shib_24.so
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;4-configure-shibboleth-sp&quot;&gt;4. Configure Shibboleth SP&lt;/h3&gt;
&lt;p&gt;It’s not a simple task to fully properly configure Shibboleth SP. A very basic example of such configuration is below:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Add/configure host in Request Mapper section:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;RequestMapper type=&quot;Native&quot;&amp;gt;
  &amp;lt;RequestMap&amp;gt;
    &amp;lt;Host name=&quot;sp.mogikanensoftware.com&quot; scheme=&quot;http&quot;&amp;gt;
      &amp;lt;Path name=&quot;secure&quot; authType=&quot;shibboleth&quot; requireSession=&quot;true&quot;
        forceAuthn=&quot;true&quot; /&amp;gt;
    &amp;lt;/Host&amp;gt;
  &amp;lt;/RequestMap&amp;gt;
&amp;lt;/RequestMapper&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Configure/modify Application Defaults to use our SP:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;ApplicationDefaults entityID=&quot;https://sp.mogikanensoftware.com/Shibboleth.sso&quot;
		REMOTE_USER=&quot;eppn persistent-id targeted-id&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Configure the appropriate Identity Provider:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Specify IdP/SSO entityID:&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;SSO entityID=&quot;http://eumadfsdev.extranetusermanager.com/adfs/services/trust&quot;&amp;gt;
    SAML2 SAML1
  &amp;lt;/SSO&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Configure IdP/SSO metadata:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;MetadataProvider type=&quot;XML&quot; file=&quot;FederationMetadata.xml&quot;&amp;gt;
  &amp;lt;/MetadataProvider&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Configure &lt;code class=&quot;highlighter-rouge&quot;&gt;CredentialResolver&lt;/code&gt; using private key and public certs created using &lt;code class=&quot;highlighter-rouge&quot;&gt;keytool&lt;/code&gt; in step #2 at the very beginning
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;!-- Simple file-based resolver for using a single keypair. --&amp;gt;
&amp;lt;CredentialResolver type=&quot;File&quot; key=&quot;omd-local-dev.p12&quot; certificate=&quot;omd-local-dev.cer&quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Start/or restart Apache:
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./apachectl start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;or&lt;/p&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./apachectl restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Start Shibboleth SP daemon:
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;launchctl load -F /Library/LaunchDaemons/org.macports.shibd.plist
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Generate your SP Metadata file by hitting &lt;a href=&quot;http://sp.mogikanensoftware.com/Shibboleth.sso/Metadata&quot;&gt;http://sp.mogikanensoftware.com/Shibboleth.sso/Metadata&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Share your SP Metadata file with your Identity Provider&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;5-final-steps&quot;&gt;5. Final steps&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Confirm that the Identity Provider (SSO) your SP points to has successfully imported your SP Metadata;&lt;/li&gt;
  &lt;li&gt;Open public content of your virtual sites - &lt;a href=&quot;https://sp.mogikanensoftware.com/index.html&quot;&gt;https://sp.mogikanensoftware.com/index.html&lt;/a&gt;. You should get the page without any security handling;&lt;/li&gt;
  &lt;li&gt;Open/try to access secured page - &lt;a href=&quot;https://sp.mogikanensoftware.com/secure/index.html&quot;&gt;https://sp.mogikanensoftware.com/secure/index.html&lt;/a&gt;. You should be redirected to your Identity Provider Authentication process (login page);&lt;/li&gt;
  &lt;li&gt;Authenticate at your IdP. You will be redirected to your secured page;&lt;/li&gt;
  &lt;li&gt;Congratulations! We are done!&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;additional-notes&quot;&gt;Additional notes&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;The above  describe a simplified way of configuration;&lt;/li&gt;
  &lt;li&gt;In reality there might be multiple virtual sites,  multiple Identity Providers, etc.&lt;/li&gt;
  &lt;li&gt;It’s highly recommended to read the official &lt;a href=&quot;https://wiki.shibboleth.net/confluence/display/SHIB2&quot;&gt;Shibboleth SP documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- Universal Code for Disqus  --&gt;
&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
    /**
     *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
     *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables
     */
    /*
    var disqus_config = function () {
        this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
        this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
    };
    */
    (function() {  // DON'T EDIT BELOW THIS LINE
        var d = document, s = d.createElement('script');

        s.src = '//https-mogikanen9-github-io.disqus.com/embed.js';

        s.setAttribute('data-timestamp', +new Date());
        (d.head || d.body).appendChild(s);
    })();
&lt;/script&gt;

&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot; rel=&quot;nofollow&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;

</description>
        <pubDate>Wed, 28 Dec 2016 10:15:49 -0500</pubDate>
        <link>https://mogikanen9.github.io/apache/shibboleth/2016/12/28/configure-shibboleth-sp-on-mac.html</link>
        <guid isPermaLink="true">https://mogikanen9.github.io/apache/shibboleth/2016/12/28/configure-shibboleth-sp-on-mac.html</guid>
        
        
        <category>apache</category>
        
        <category>shibboleth</category>
        
      </item>
    
      <item>
        <title>My First Steps with HAPI. Part 2. Parsing HL7 message.</title>
        <description>&lt;p&gt;This post is a second part of my introduction into HAPI library.&lt;/p&gt;

&lt;h3 id=&quot;parse-hl7-message&quot;&gt;Parse HL7 message&lt;/h3&gt;

&lt;p&gt;We will start with a simple project which will demonstrate how to parse HL7 messages using HAPI API.&lt;/p&gt;

&lt;h4 id=&quot;tools-and-libraries-will-use&quot;&gt;Tools and libraries will use&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;JDK 1.8&lt;/li&gt;
  &lt;li&gt;Maven&lt;/li&gt;
  &lt;li&gt;Eclipse (STS 3.8.1)&lt;/li&gt;
  &lt;li&gt;HAPI API v2.2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;HAPI has a very good &lt;a href=&quot;http://hl7api.sourceforge.net/devbyexample.html&quot;&gt;set of examples&lt;/a&gt;
which is a good starting point. Will use it as well - will jump right to section ‘Parsing Messages’.&lt;/p&gt;

&lt;h4 id=&quot;configuration-steps&quot;&gt;Configuration steps&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Create empty Maven based project simple-hl7-parser using basic archetype;&lt;/li&gt;
  &lt;li&gt;Add HL7 dependencies:
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;..........................
&amp;lt;properties&amp;gt;
      &amp;lt;hapi.version&amp;gt;2.2&amp;lt;/hapi.version&amp;gt;
  &amp;lt;/properties&amp;gt;
&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;ca.uhn.hapi&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;hapi-base&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;${hapi.version}&amp;lt;/version&amp;gt;
  &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;
&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;ca.uhn.hapi&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;hapi-structures-v24&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;${hapi.version}&amp;lt;/version&amp;gt;
  &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;
..........................
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Import project into the IDE.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Notes: HAPI library packs structures for different HL7 versions in different artifacts. In my case I will use/parse HL7v2.4 messages -  I only included ‘hapi-structures-v24’ artifact.&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;coding&quot;&gt;Coding&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Create an instance HapiContext&lt;/li&gt;
  &lt;li&gt;Create an instance of CanonicalModelClassFactory&lt;/li&gt;
  &lt;li&gt;Add/set CanonicalModelClassFactory to HapiContext&lt;/li&gt;
  &lt;li&gt;Get parser (PipeParser)&lt;/li&gt;
  &lt;li&gt;Parse message&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below is a piece of sample code:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HapiContext context = new DefaultHapiContext();

CanonicalModelClassFactory mcf = new CanonicalModelClassFactory(&quot;2.4&quot;);

context.setModelClassFactory(mcf);

PipeParser parser = context.getPipeParser();

ca.uhn.hl7v2.model.v24.message.ORU_R01 msg = (ca.uhn.hl7v2.model.v24.message.ORU_R01) parser.parse(message);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The following things immediately pops to our eyes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;CanonicalModelClassFactory takes Hl7v2 specific version (2.4 in our case)&lt;/li&gt;
  &lt;li&gt;Parsing result is an instance of ORU_R01 class from package ca.uhn.hl7v2.model.v24.message&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Items above means that we need to know which HL7v2 message we expect to parse and each version has its own strict model.&lt;/p&gt;

&lt;!-- Universal Code for Disqus  --&gt;
&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
    /**
     *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
     *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables
     */
    /*
    var disqus_config = function () {
        this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
        this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
    };
    */
    (function() {  // DON'T EDIT BELOW THIS LINE
        var d = document, s = d.createElement('script');

        s.src = '//https-mogikanen9-github-io.disqus.com/embed.js';

        s.setAttribute('data-timestamp', +new Date());
        (d.head || d.body).appendChild(s);
    })();
&lt;/script&gt;

&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot; rel=&quot;nofollow&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;

</description>
        <pubDate>Tue, 04 Oct 2016 22:55:49 -0400</pubDate>
        <link>https://mogikanen9.github.io/java/hapi/2016/10/04/first-steps-with-hapi-p2.html</link>
        <guid isPermaLink="true">https://mogikanen9.github.io/java/hapi/2016/10/04/first-steps-with-hapi-p2.html</guid>
        
        
        <category>java</category>
        
        <category>hapi</category>
        
      </item>
    
      <item>
        <title>My First Steps with HAPI. Part 1. Introduction.</title>
        <description>&lt;p&gt;This post is an introduction into HAPI library.&lt;/p&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;We are starting a new project in Healthcare integration domain. The core functionality can be described like “a service/application which accepts HL7v2 messages over HTTP, validates them, transforms into custom XML and delivers to the recipients via SFTP”. When I googled for “HL7v2 Java” - HAPI is the first thing which tops the results. What does it mean? Let’s start with some definitions:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Health_Level_7&quot;&gt;HL7&lt;/a&gt; stands for “Health Level 7”. It’s a standard which describes how to transfer different healthcare clinical data.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Health_Level_7#HL7_version_2&quot;&gt;HL7v2&lt;/a&gt; is a version of HL7 standard developed in 1989 and it is based on pipes &lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt; and carets &lt;code class=&quot;highlighter-rouge&quot;&gt;^&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://hl7api.sourceforge.net/&quot;&gt;HAPI&lt;/a&gt; is a Java-based Hl7v2 parser library.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When I first heard about HL7v2 several years ago and reviewed HL7v2 messages it looked like a bad joke. Neither XML nor JSON, really? Well, 1989 - what else you can expect. On the other side the protocol is widely adopted and currently it is still the main workhorse in healthcare industry.&lt;/p&gt;

&lt;p&gt;First results of checking HAPI website:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The latest stable version is 2.2 and the last published date is “2014-05-12”;&lt;/li&gt;
  &lt;li&gt;The site is hosted at &lt;a href=&quot;https://sourceforge.net/&quot;&gt;sourceforge.net&lt;/a&gt;;&lt;/li&gt;
  &lt;li&gt;The library is built by &lt;a href=&quot;http://maven.apache.org/&quot;&gt;Maven&lt;/a&gt;;&lt;/li&gt;
  &lt;li&gt;Lots of examples in &lt;a href=&quot;http://hl7api.sourceforge.net/devbyexample.html&quot;&gt;Developing using HAPI - By Example&lt;/a&gt; section;&lt;/li&gt;
  &lt;li&gt;Decently looking Documentation section with references to all HL7v2.1 - HL7v2.6 messages.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;First impression conclusion - legacy library for legacy protocol with its pros. and cons.&lt;/p&gt;

&lt;p&gt;Pros.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Open source;&lt;/li&gt;
  &lt;li&gt;Should be stable and well tested;&lt;/li&gt;
  &lt;li&gt;Decent documentation:&lt;/li&gt;
  &lt;li&gt;Decent community;&lt;/li&gt;
  &lt;li&gt;Maven based.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;No Java 8 support;&lt;/li&gt;
  &lt;li&gt;Latest Spring Framework support is questionable;&lt;/li&gt;
  &lt;li&gt;Support in general is a grey area.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Well, let’s take next step.&lt;/p&gt;

&lt;p&gt;Looked really promising.&lt;/p&gt;

&lt;!-- Universal Code for Disqus  --&gt;
&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
    /**
     *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
     *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables
     */
    /*
    var disqus_config = function () {
        this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
        this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
    };
    */
    (function() {  // DON'T EDIT BELOW THIS LINE
        var d = document, s = d.createElement('script');

        s.src = '//https-mogikanen9-github-io.disqus.com/embed.js';

        s.setAttribute('data-timestamp', +new Date());
        (d.head || d.body).appendChild(s);
    })();
&lt;/script&gt;

&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot; rel=&quot;nofollow&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;

</description>
        <pubDate>Sun, 25 Sep 2016 22:55:49 -0400</pubDate>
        <link>https://mogikanen9.github.io/java/hapi/2016/09/25/first-steps-with-hapi.html</link>
        <guid isPermaLink="true">https://mogikanen9.github.io/java/hapi/2016/09/25/first-steps-with-hapi.html</guid>
        
        
        <category>java</category>
        
        <category>hapi</category>
        
      </item>
    
      <item>
        <title>Cobertura and JaCoCo: using test coverage plugin</title>
        <description>&lt;p&gt;Recently I decided to configure a test coverage plugin for one of my pet projects to have a better visibility of my unit tests. At work we use &lt;a href=&quot;http://www.sonarqube.org/&quot;&gt;SonarQube&lt;/a&gt; - too much for my purpose. I immediately looked at Cobertura and its &lt;a href=&quot;http://www.mojohaus.org/cobertura-maven-plugin/&quot;&gt;Maven plugin&lt;/a&gt;. Several years ago I setup Cobertura for couple of real projects at our CI server and it worked great. The setup was straightforward and I started to enjoy my test coverage report. My happy time was short - once I started to use lambdas (introduced in Java 8) extensively the plugin started to struggle with analysis. The plugin failed to check those classes and generated a errors like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java.lang.IllegalArgumentException: INVOKESPECIAL/STATIC on interfaces require ASM 5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I was using version 2.7 which supposed to support Java 8. Once googled I found that I am not the only one who is facing those issues. People reported same issues at their &lt;a href=&quot;https://github.com/cobertura/cobertura/issues/166&quot;&gt;GitHub page&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dilemma: should I spent more time digging into it or try an alternative?&lt;/p&gt;

&lt;p&gt;I knew that SonarQube was using &lt;a href=&quot;http://www.eclemma.org/jacoco/&quot;&gt;JaCoCo&lt;/a&gt; and I also used Emma Eclipse plugin long time ago and it also worked quite well. Decided to try JaCoco. The setup was not as neat as for Cobertura plugin but I made it working and it worked perfectly with Java 8.&lt;/p&gt;

&lt;p&gt;The final Maven plugin configuration is below.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;build&amp;gt;
	...
  &amp;lt;plugin&amp;gt;
    &amp;lt;groupId&amp;gt;org.jacoco&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;jacoco-maven-plugin&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;0.7.7.201606060606&amp;lt;/version&amp;gt;
    &amp;lt;configuration&amp;gt;
      &amp;lt;destFile&amp;gt;${basedir}/target/coverage-reports/jacoco-unit.exec&amp;lt;/destFile&amp;gt;
      &amp;lt;dataFile&amp;gt;${basedir}/target/coverage-reports/jacoco-unit.exec&amp;lt;/dataFile&amp;gt;
      &amp;lt;/configuration&amp;gt;
        &amp;lt;executions&amp;gt;
          &amp;lt;execution&amp;gt;
            &amp;lt;id&amp;gt;jacoco-initialize&amp;lt;/id&amp;gt;
            &amp;lt;goals&amp;gt;
              &amp;lt;goal&amp;gt;prepare-agent&amp;lt;/goal&amp;gt;
            &amp;lt;/goals&amp;gt;
          &amp;lt;/execution&amp;gt;
          &amp;lt;execution&amp;gt;
            &amp;lt;id&amp;gt;jacoco-site&amp;lt;/id&amp;gt;
            &amp;lt;phase&amp;gt;package&amp;lt;/phase&amp;gt;
            &amp;lt;goals&amp;gt;
              &amp;lt;goal&amp;gt;report&amp;lt;/goal&amp;gt;
              &amp;lt;/goals&amp;gt;
          &amp;lt;/execution&amp;gt;
        &amp;lt;/executions&amp;gt;
      &amp;lt;/plugin&amp;gt;
    &amp;lt;/plugins&amp;gt;
    ...
&amp;lt;/build&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;!-- Universal Code for Disqus  --&gt;
&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
    /**
     *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
     *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables
     */
    /*
    var disqus_config = function () {
        this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
        this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
    };
    */
    (function() {  // DON'T EDIT BELOW THIS LINE
        var d = document, s = d.createElement('script');

        s.src = '//https-mogikanen9-github-io.disqus.com/embed.js';

        s.setAttribute('data-timestamp', +new Date());
        (d.head || d.body).appendChild(s);
    })();
&lt;/script&gt;

&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot; rel=&quot;nofollow&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;

</description>
        <pubDate>Fri, 23 Sep 2016 21:15:49 -0400</pubDate>
        <link>https://mogikanen9.github.io/jekyll/update/2016/09/23/select-test-coverage-plugin.html</link>
        <guid isPermaLink="true">https://mogikanen9.github.io/jekyll/update/2016/09/23/select-test-coverage-plugin.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

&lt;!-- Universal Code for Disqus  --&gt;
&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
    /**
     *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
     *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables
     */
    /*
    var disqus_config = function () {
        this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
        this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
    };
    */
    (function() {  // DON'T EDIT BELOW THIS LINE
        var d = document, s = d.createElement('script');

        s.src = '//https-mogikanen9-github-io.disqus.com/embed.js';

        s.setAttribute('data-timestamp', +new Date());
        (d.head || d.body).appendChild(s);
    })();
&lt;/script&gt;

&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot; rel=&quot;nofollow&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;

</description>
        <pubDate>Tue, 20 Sep 2016 21:50:49 -0400</pubDate>
        <link>https://mogikanen9.github.io/jekyll/update/2016/09/20/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">https://mogikanen9.github.io/jekyll/update/2016/09/20/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
